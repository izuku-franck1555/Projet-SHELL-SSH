
#!/bin/bash

#fonction ger la verification du serveur ssh par defaut
 function verification()
 {
 clear
 ssh -v
 }
 
 
 #fonction qui gere le telechargement du package openssh
 function telecharger()
 {
 clear
 sudo apt-get install openssh-server
 
 }
 
 
 #function qui gere la configuration du serveur ssh 
 function configuration()
 {
 sudo /etc/init.d/ssh start
 }
 
 
 
 function gen_con()
 {
    #cette partir c'est pour la connection a prtir de la paire de cle publique/privee
    
    ssh-keygen
    
    echo -e "\t Generation terminer \t"
    echo -e "\t------------------------------------\t"
    
    #il fo mtn expedier la cle publique de chaque client qui ve se connecter a un serveur ssh o serveur et chaque fois que cette mqchine client voudra se connecter a un nouveau serveur ssh il va devoir lui rexepdier a nouveau sa cle publique en faisant de la mm maniere.
    
    echo -e " \t Entrez le login de la machine serveur \t"
    read log
    echo -e "\t Entrez l'adresse ip de la machine serveur \t"
    read ad
    
    echo -e "\t----------Envoie de cle publique o serveur-------------\t"
    
    ssh $log@$ad "echo ‘cat ~/.ssh/id_rsa.pub‘ >> .ssh/authorized_keys"
 
 }
 
 /*Connection par mot de passe*/
 
 function pwssword_con()
 {
 echo -e "\t\t Entrez le login de la machine serveur \t\t"
 read log
 echo -e " \t\t Entrez l'adresse ip du serveur \t\t"
 read ad
 
 var=`ssh  $log@$ad`
 
if test $var is true
then
echo -e " \t Connection \t etablit \t"
else
echo -e " \t Par \t de \t connection \t"
fi 
 }
 

 
 /*Telechargement du paquet de configuration de mysecureshell*/
 
 function down_mss()
 {
   resize -s 18 60
   clear
   down=0
  echo -e  " \t************************************************************\t" 
  echo -e  " \t*  Telechargement du paquet d'installation de              *\t" 
  echo -e  " \t*  mysecureshell                                           *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t*           MySecureSHELL                                  *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t************************************************************\t"
  echo -e  " \n\n "
  
  echo -e " \t Pour telecharger mysecureshell taper dans votre barre de navigation la commande suivante: \t "
  echo -e " \t deb http://mysecureshell.free.fr/repository/debian testing main \t"
  
  echo -e " \t Apres telechargement du paquet vous pouvez directement l'installer aussi \t"
  echo -e  "\t-------------------------------------------------------------\t"
  down=1
  p1=` echo -e "Installpackages"`
  p2=` echo -e "Quitter"`
  
  option=($p1 $p2)
  select choix in ${option[@]}
  do
  case $REPLY in
  1) ins_mss break;;
  2) secu_sh break;;
  *)echo -e " \t Entrez un choix valide \t";;
  
  esac
  done
    
 }
 
  /*cette partir c est pour l installation du paquets MSS */
  
 function ins_mss()
 {
 resize -s 18 60
 ins=0
 clear
  echo -e  " \t************************************************************\t" 
  echo -e  " \t*       Installation du paquet  de                         *\t" 
  echo -e  " \t*  mysecureshell                                           *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t*           MySecureSHELL                                  *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t************************************************************\t"
  echo -e  " \n\n "
  
  echo -e " C'est ici que votre mysecureshell sera installer"
  
  sudo apt-get install mysecureshell
  
  echo -e  " \t Paquet installer \t"
  echo -e  " \t------------------------------------------------------------\t"
  ins=1
  p1=` echo -e "downloadpackages"`
  p2=` echo -e "Quitter"`
  
  option=($p1 $p2)
  select choix in ${option[@]}
  do
  case $REPLY in
  1) down_mss break;;
  2) secu_sh break;;
  *)echo -e " \t Entrez un choix valide \t";;
  
  esac
  done
 
 
 }
 
 /* Creation d utilisateur */
 
 function creat_mss()
 {
 resize -s 18 60
 clear
  clear
  echo -e  " \t************************************************************\t" 
  echo -e  " \t*       Creation d'un utilisateur                          *\t" 
  echo -e  " \t*       avec    mysecureshell                              *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t*           MySecureSHELL                                  *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t************************************************************\t"
  echo -e  " \n\n "
  
  if [ $down -eq 1 -a $ins -eq 1]
  then
  sudo adduser --home /var/sftp --shell /bin/MySecureShell sftpuser
  echo -e " \t Utilisateur creer"
  echo -e  "\t------------------------------------------------------------\t"
   else
   echo -e "paquets non existant  ou noninstaller "
   fi
  secu_sh
  
 
 }
 
 
/*creation des utilisateurs avec MySecureShell*/ 
  function secu_sh()
 {
  resize -s 22 90
  clear

  echo -e  " \t************************************************************\t"
  echo -e  " \t*  Cette  partir permet de creer les                       *\t" 
  echo -e  " \t*  utilisateurs qui non par de shell                       *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t*           MySecureSHELL                                  *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t************************************************************\t"
  echo -e  " \n\n "
  
  p1=` echo -e " Downloadmysecureshell"`
  p2=` echo -e " Instal"`
  p3=` echo -e " usercreate"`
  p4=` echo -e " Quitter"`
  
  option=($p1 $p2 $p3 $p4)
  
  select choix in ${option[@]}
  do 
  case  $REPLY in 
     1)  down_mss break;;
     2)  ins_mss break;;
     3)  creat_mss break;;
     4)  fonct_client break;;
     *) echo -e " Entrez un choix valide "
  esac
done
  
  }
 
 /*Navigation sur nautilus*/
 function naut()
 {
   echo -e " \t Entrez le login de la machine serveur \t"
   read log
   echo -e "\t Entrez l'adresse ip de la machine serveur \t"
   read ad
   
   echo -e "\t Entrez dans votre  barre de navigation la commande suivant: (en remplacant login par le login que vous avez saisir o clavier et pareil pour l'adresse ip )\t"
   echo -e "\t sftp://$log@$ad \t"
   echo -e "\t ---------------------\t"
  
 
 }
 
 /*Navigation sur kongueror
 
 function kong()
 {
   echo -e " \t Entrez le login de la machine serveur \t"
   read log
   echo -e "\t Entrez l'adresse ip de la machine serveur \t"
   read ad
   
   echo -e "\t Entrez dans votre  barre de navigation la commande suivant: (en remplacant login par le login que vous avez saisir o clavier et pareil pour l'adresse ip) \t"
   echo -e "\t fish://$log@$ad \t"
   echo -e "\t-----------------------\t"
 
 }
 
/*navigation securiser avec sftp*/ 
  function secu_nav()
 {
  resize -s 22 90
  clear

  echo -e  " \t************************************************************\t"
  echo -e  " \t*  Cette  partir permet naviguer  de facon                 *\t" 
  echo -e  " \t*  securiser   a la maniere d'un ftp                       *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t*  SFTP=secure file transfert protocol                     *\t"
  echo -e  " \t*                                                          *\t"
  echo -e  " \t************************************************************\t"
  echo -e  " \n\n "
  
  p1=` echo -e " SurNautilus"`
  p2=` echo -e " SurKongueror"`
  p3=` echo -e " Quitter"`
  
  option=($p1 $p2 $p3)
  
  select choix in ${option[@]}
  do 
  case  $REPLY in 
     1)naut break;;
     2)kong break;;
     3) fonct_client break;;
     *) echo -e "Effectuer un choix valide ";;
     esac
     done
  
  }
  
  
 /*tranfert de fichier securiser du client vers le serveur avec scp*/
 function secu_cop()
 {
  resize -s 22 90
  clear

  echo -e  " \t************************************************************\t"
  echo -e  " \t*  Cette  partir c'est  pour  des copis                    *\t" 
  echo -e  " \t*  securiser  du  client  vers  serveur  et                *\t"
  echo -e  " \t*  et   pouvant   recevoir   des   copies  du              *\t"
  echo -e  " \t*  serveur  (de fichier)                                   *\t"
  echo -e  " \t*  SCP = secure copy  protocol                             *\t"
  echo -e  " \t************************************************************\t"
  echo -e  " \n\n "
  
  echo -e "\t Entrez le login de la machine serveur \t"
  read log
  echo -e " \t Entrez l' adresse ip de la machine serveur \t"
  read ad
  echo -e " \t Entrez le chemin d'acces du fichier local \t"
  read fic
  echo -e "\t Le chemin d'acces du repertoire distant \t"
  read rep
  
  copy=`scp /$fic $log@$ad:/$rep`
  
  if test $copy is true
  then
  
  echo -e "\t Copy de $fic reuissir "
  echo -e "\t-------------------------\t"
  
  else
  
  echo -e "\t Echec de copie de $fic"
  echo -e "\t-------------------------\t"
  
  fi  
  
}


/* Telechargement et installation du paquets sshfs */

function tel_ins()
{
 resize -s 16 80 
 clear
 
  echo -e  " \t**********************************************************\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*   TELECHARGEMENT ET INSTALLATION DU PAQUETS DE SSHFS   *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t**********************************************************\t"
  echo -e  " \n\n "
  
  echo -e " \t Activer votre connection pour l'installation de sshfs.... \t"
  
  
  sudo apt-get install sshfs
  
  echo -e "\t --Telechargement et installation reuisir-- \t"
  echo -e "\t----------------------------------------\t"
  
  
   p1=` echo -e "MonterRepertoire"`
   p2=` echo -e "Quitter"`
  
  option=($p1 $p2)
  select choix in ${option[@]}
  do
  case $REPLY in
  1)  break;;
  2) syst_vir break;;
  *)echo -e " \t Entrez un choix valide \t";;
  
  esac
  done
  
}


/* Demonter un reptoire */

function mont_rep()
{

resize -s 16 80
clear

  echo -e  " \t**********************************************************\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*   Montage du repertoire local du serveur vers un       *\t"
  echo -e  " \t*    repertoire local du client                          *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t**********************************************************\t"
  echo -e  " \n\n "
  
  echo -e "\t Entrez le login de la machine serveur: \t"
  read log
  echo -e "\t Entrez l'adresse ip de la machine serveur: \t"
  read ad
 
 echo -e "\t Entrez le repertoire distant: \t"
 read rep1
 echo -e "\t Entrez le repertoire local: \t"
 read rep2
 echo -e "\t observez la magie informatique \t"
 
 sshfs $log@$ad:/$rep1 /$rep2


}
 
 
 /*Systeme de fichier virtuel avec sshfs*/
 function syst_vir()
 { 
 resize -s 16 80 
 clear
 
  echo -e  " \t**********************************************************\t"
  echo -e  " \t*   sshfs permet o client d'avoir acces o donnees de la  *\t"
  echo -e  " \t*   machine serveuir a distance.. de pouvoir realiser    *\t"
  echo -e  " \t*   des actions tel que visionner des videos a distance  *\t"
  echo -e  " \t*   de monter les repertoires et fichiers de la machine  *\t"
  echo -e  " \t*   serveur en toute securiter                           *\t"
  echo -e  " \t**********************************************************\t"
  echo -e  " \n\n "



   p1=`echo -e "\t DownloadandinstallSSHFS  \n" `
   p2=`echo -e "\t MonterRepertoire  \n" `
   p3=`echo -e "\t DemonterRepertoitre \t"` 
   p4=`echo -e "\t Quitter  \t" ` 
   choix=($p1 $p2 $p3 $p4)

select choix1 in ${choix[@]}
 do 
  case $REPLY in 
   1)tel_ins break;;
   2) mont_rep break;;
   3) break;;
   4) fonct_client break ;;
   *)echo "Faite un choix valide";;
  esac
   
done
echo "Faites votre choix:"

 
 
 }
 
 
 /*Affichage a distance*/
 function affich_dist()
 {
 resize -s 16 83
 clear
 
  echo -e  " \t**********************************************************\t"
  echo -e  " \t*   L'affichage a distance permet a partir de la machine *\t"
  echo -e  " \t*   client d' ouvrir les fichiers graphique tel que les  *\t"
  echo -e  " \t*   pdf, les musiques mp3, les videos.....etc            *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t**********************************************************\t"
  echo -e  " \n\n "
  
  echo -e "\t---->Pour se connecter en mode graphique pour les affichages<---\t"
  echo -e "\t---->a distance il suffit lors de la connection d'ajouter   <---\t"
  echo -e "\t----> l'option -X et l'option -C  qui permet d'activer la   <---\t"
  echo -e "\t---->             compression                               <---\t"
  
  echo -e "\t----> Entrez le login de la machine serveur: <---- \t"
  read log
  echo -e "\t----> Entrez l'adresse ip de la machine serveur: <---- \t"
  read ad
  
  echo -e "\t----> Vous avez deux option pour l'ouverture du logiciel: <---\t"
  echo -e "\t----> Vous pouvez ajouter le nom du logiciel a la suite de <---\t"
  echo -e "\t---->la connection ou apres vous etes connecter taper juste<---\t"
  echo -e "\t---->      le non du logiciel en ligne de commande        <---\t"
  
  echo -e "\t---->            Connection o serveur                     <----\t"
  
  ssh -XC $log@$ad
  
  echo -e "\t--->         Connection reuissir     <---\t" 
  
  
  
 
 }
 
/* Fonctionnalites du client ssh*/
function fonct_client()
{

resize -s 16 83

#gnome-terminal --geometry 70x40


 clear

  echo -e  " \t**********************************************************\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  "      \t     Fonctionnalites  \t du \t    clientssh       \t\t "
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t**********************************************************\t"
  echo -e  " \n\n "



   p1=`echo -e "\t Securecopy(SCP)  \n" `
   p2=`echo -e "\t Navigation(SFTP)  \n" `
   p3=`echo -e "\t MYSecureShell \t"`
   p4=`echo -e "\t SystemedefichierSSHFS  \n" ` 
   p5=`echo -e "\t Affichagedistance  \n" ` 
   p6=`echo -e "\t Redirectiondesports  \n" ` 
   p7=`echo -e "\t Quitter  \t" ` 
   choix=($p1 $p2 $p3 $p4 $p5 $p6 $p7)

select choix1 in ${choix[@]}
 do 
  case $REPLY in 
   1) secu_cop  break;;
   2) secu_nav break;;
   3) secu_sh break;;
   4) syst_vir break;;
   5)affich_dist break;;
   6);;
   7) menu1 break ;;
   *)echo "Faite un choix valide";;
  esac
   
done
echo "Faites votre choix:"

 
}
 
function conf_client()
{
#gnome-terminal --geometry 70x40
resize -s 16 83
 clear

  echo -e  " \t**********************************************************\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t     Configuration \t\t du \t\t client                      "
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t**********************************************************\t"
  echo -e  " \n\n "



   p1=`echo -e "\t connectionpassword  \n" `
   p2=`echo -e "\t Generatiodescle  \n" `
   p3=`echo -e "\t Quitter \n" ` 
  
   choix=($p1 $p2 $p3)

select choix1 in ${choix[@]}
 do 
  case $REPLY in 
   1)pwssword_con ;;
   2)gen_con ;;
   3) menu1  break ;;
   *)echo "Faite un choix valide";;
  # echo -e "\t\t Faites votre choix \t\t";;
 esac
 
done 
}
 
 function configurer()
 {
 
 clear 
 
 resize -s 16 83
 
  echo -e  " \t**********************************************************\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  "      \t\t Configurer  \t\t serveur                            "
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t**********************************************************\t"
  echo -e  " \n\n "
  
  p1=`echo -e "\t Verification \n"`
  p2=`echo -e "\t Telechargersshdemarer    \n"`
  p3=`echo -e "\t Configurerleserveur\n"`
  p4=`echo -e "\t Configurerleclient \n"`
  p5=`echo -e "\t Quitter \n"`
  
  option=($p1 $p2 $p3 $p4 $p5)
  
  select option1 in ${option[@]}
  do
  case $REPLY in
  1) verification;;
  2) telecharger;;
  3)configuration;;
  4)conf_client;;
  5) menu1 break;;
  *) echo "Faite un choix valide";;
  esac
 done
 }
 
 
function menu1()
{
#gnome-terminal --geometry 70x40

resize -s 16 83
 clear

  echo -e  " \t**********************************************************\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*     Configuration  \t du \t    clientssh               *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t*                                                        *\t"
  echo -e  " \t**********************************************************\t"
  echo -e  " \n\n "



   p1=`echo -e "\n Configurerleserveur   \n" `
   p2=`echo -e "\n Configurationduclient   \n" `
   p3=`echo -e "\n Fonctionnalitduclient \n"`
   p4=`echo -e "\n Quitter \n" ` 
  
   choix=($p1 $p2 $p3 $p4)

select choix1 in ${choix[@]}
 do 
  case $REPLY in 
   1)configurer ;;
   2)conf_client ;;
   3) fonct_client;;
   4) break ;;
   *)echo "Faite un choix valide";;
  esac
   
done
echo "Faites votre choix:"

 
}
menu1